{"created":"2025-05-14T08:10:45.005223700Z","modified":"2025-07-04T09:50:48.874458100Z","name":"extraction random 10000 13 05 2025 Openrefine csv","password":"","encoding":"UTF-8-BOM","encodingConfidence":0,"tags":[],"creator":"","contributors":"","subject":"","description":"","rowCount":10004,"title":"","version":"","license":"","homepage":"","image":"","importOptionMetadata":[{"encoding":"UTF-8-BOM","separator":",","ignoreLines":-1,"headerLines":1,"skipDataLines":0,"limit":-1,"storeBlankRows":true,"storeBlankColumns":true,"guessCellValueTypes":false,"processQuotes":true,"quoteCharacter":"\"","storeBlankCellsAsNulls":true,"includeFileSources":false,"includeArchiveFileName":false,"trimStrings":false,"disableAutoPreview":false,"projectName":"extraction random 10000 13 05 2025 Openrefine csv","projectTags":[],"fileSource":"extraction_random_10000_13_05_2025_Openrefine.csv","archiveFileName":null}],"customMetadata":{},"preferences":{"entries":{"scripting.starred-expressions":{"top":2147483647,"list":[],"class":"com.google.refine.preference.TopList"},"scripting.expressions":{"top":100,"list":["jython:if hasattr(cell.recon, 'error') and cell.recon.error:\n    return \"error : \" + cell.recon.error\nelif not cell.recon.candidates or len(cell.recon.candidates) == 0:\n    return \"\"\nelse:\n    candidates_list = []\n    for candidate in cell.recon.candidates:\n        candidates_list.append(\"('\" + candidate.id + \"', \" + str(candidate.score) + \")\")\n    \n    return \"{candidats : [\" + \", \".join(candidates_list) + \"]}\"","jython:if not cell.recon.candidates or len(cell.recon.candidates) == 0:\n    return \"\"\nelse:\n    candidates_list = []\n    for candidate in cell.recon.candidates:\n        candidates_list.append(\"('\" + candidate.id + \"', \" + str(candidate.score) + \")\")\n    \n    return \"{candidats : [\" + \", \".join(candidates_list) + \"]}\"","jython:candidates_list = []\nfor candidate in cell.recon.candidates:\n    candidates_list.append(\"('\" + candidate.id + \"', \" + str(candidate.score) + \")\")\n\nreturn \"{candidats : [\" + \", \".join(candidates_list) + \"]}\""],"class":"com.google.refine.preference.TopList"}}}}